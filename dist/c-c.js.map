{"version":3,"file":"c-c.js","sources":["../index.js"],"sourcesContent":["let stylesheet;\nlet cache = {\n    css: '',\n    classesNames: {}\n};\n\nexport function c(rules) {\n    return parse(rules);\n}\n\nexport function styles() {\n    return cache.css;\n}\n\nfunction insert(rule) {\n    if (typeof document !== 'undefined') {\n        if (!stylesheet) {\n            stylesheet = document.createElement('style');\n\n            document.body.appendChild(stylesheet);\n        }\n\n        // @see: https://stackoverflow.com/a/28930990\n        stylesheet.appendChild(document.createTextNode(rule));\n    }\n\n    if (typeof document === 'undefined' && cache.css.indexOf(rule) === -1) {\n        cache.css = cache.css + rule;\n    }\n}\n\n// @see https://github.com/jxnblk/object-style/blob/v1.0.3/src/index.js\n// @see https://github.com/cxs-css/cxs/blob/master/src/index.js\nfunction parse(obj, children = '', media = '') {\n    return Object.keys(obj)\n        .map((key) => {\n            const value = obj[key];\n\n            if (value === null) return '';\n            if (typeof value === 'object') {\n                const isMedia = /^@m/.test(key);\n\n                return parse(\n                    value,\n                    isMedia ? children : (children + key).replace(' ', ''),\n                    isMedia ? key : media\n                );\n            }\n\n            const id = key + value + children + (media || '');\n\n            if (cache.classesNames[id]) return cache.classesNames[id];\n\n            // @see https://github.com/cristianbote/goober/blob/v1/src/core/to-hash.js#L10\n            const className =\n                'c' + id.split('').reduce((out, i) => (101 * out + i.charCodeAt(0)) >>> 0, 11);\n\n            insert(createRule(className, key, value, children, media));\n\n            cache.classesNames[id] = className;\n\n            return className;\n        })\n        .join(' ');\n}\n\nfunction createRule(className, key, value, children, media) {\n    const selector = '.' + className + children;\n    const rule =\n        selector + '{' + key.replace(/[A-Z]|^ms/g, '-$&').toLowerCase() + ':' + value + '}';\n\n    if (!media) return rule;\n\n    return media + '{' + rule + '}';\n}\n"],"names":["stylesheet","cache","css","classesNames","rules","parse","obj","children","media","Object","keys","map","key","value","isMedia","test","replace","id","className","split","reduce","out","i","charCodeAt","rule","document","createElement","body","appendChild","createTextNode","indexOf","insert","toLowerCase","createRule","join"],"mappings":"AAAA,IAAIA,EACAC,EAAQ,CACRC,IAAK,GACLC,aAAc,uBAGAC,GACd,OA0BJ,SAASC,EAAMC,EAAKC,EAAeC,GAC/B,gBADgBD,IAAAA,EAAW,aAAIC,IAAAA,EAAQ,IAChCC,OAAOC,KAAKJ,GACdK,IAAI,SAACC,GACF,IAAMC,EAAQP,EAAIM,GAElB,GAAc,OAAVC,EAAgB,MAAO,GAC3B,GAAqB,iBAAVA,EAAoB,CAC3B,IAAMC,EAAU,MAAMC,KAAKH,GAE3B,OAAOP,EACHQ,EACAC,EAAUP,GAAYA,EAAWK,GAAKI,QAAQ,IAAK,IACnDF,EAAUF,EAAMJ,GAIxB,IAAMS,EAAKL,EAAMC,EAAQN,GAAYC,GAAS,IAE9C,GAAIP,EAAME,aAAac,GAAK,OAAOhB,EAAME,aAAac,GAGtD,IAAMC,EACF,IAAMD,EAAGE,MAAM,IAAIC,OAAO,SAACC,EAAKC,cAAaD,EAAMC,EAAEC,WAAW,KAAQ,GAAG,IAM/E,OA/CZ,SAAgBC,GACY,oBAAbC,WACFzB,IACDA,EAAayB,SAASC,cAAc,SAEpCD,SAASE,KAAKC,YAAY5B,IAI9BA,EAAW4B,YAAYH,SAASI,eAAeL,KAG3B,oBAAbC,WAAyD,IAA7BxB,EAAMC,IAAI4B,QAAQN,KACrDvB,EAAMC,IAAMD,EAAMC,IAAMsB,GA8BpBO,CASZ,SAAoBb,EAAWN,EAAKC,EAAON,EAAUC,GACjD,IACMgB,EADW,IAAMN,EAAYX,EAEpB,IAAMK,EAAII,QAAQ,aAAc,OAAOgB,cAAgB,IAAMnB,EAAQ,IAEpF,OAAKL,EAEEA,EAAQ,IAAMgB,EAAO,IAFTA,EAdJS,CAAWf,EAAWN,EAAKC,EAAON,EAAUC,IAEnDP,EAAME,aAAac,GAAMC,EAElBA,IAEVgB,KAAK,KAxDH7B,CAAMD,8BAIb,OAAOH,EAAMC"}